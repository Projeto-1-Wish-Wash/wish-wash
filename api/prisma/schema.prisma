// Define o conector e a URL do banco de dados
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define o gerador do Prisma Client, que criará nosso ORM
generator client {
  provider = "prisma-client-js"
}

// --- Modelos de Dados ---

// Enum para os tipos de usuário
enum UserType {
  cliente
  proprietario
}

// Enum para os status das máquinas
enum StatusMaquina {
  disponivel
  em_uso
  manutencao
}

// Modelo para a tabela de Usuários
model Usuario {
  id          Int       @id @default(autoincrement())
  nome        String
  email       String    @unique
  senha_hash  String
  tipo_usuario UserType
  endereco    String?   // Endereço completo do usuário
  latitude    Float?    // Coordenada de latitude
  longitude   Float?    // Coordenada de longitude
  createdAt   DateTime  @default(now()) @map("created_at")

  // Relação: Um usuário pode ser dono de várias lavanderias
  lavanderias Lavanderia[]

  // Mapeia o nome do modelo 'Usuario' para a tabela 'usuarios' no banco
  @@map("usuarios")
}

// Modelo para a tabela de Lavanderias
model Lavanderia {
  id        Int      @id @default(autoincrement())
  nome      String
  endereco  String?  // Endereço completo da lavanderia
  telefone  String?
  latitude  Float?   // Coordenada de latitude
  longitude Float?   // Coordenada de longitude
  horario   String?  // Horário de funcionamento
  avaliacao Float?   // Avaliação média (0-5)
  servicos  String?  // Serviços oferecidos (formato JSON string)
  createdAt DateTime @default(now()) @map("created_at")

  // Relação: Uma lavanderia pertence a um único proprietário
  proprietario    Usuario @relation(fields: [proprietario_id], references: [id])
  proprietario_id Int

  // Relação: Uma lavanderia pode ter várias máquinas
  maquinas MaquinaDeLavar[]

  // Mapeia o nome do modelo 'Lavanderia' para a tabela 'lavanderias' no banco
  @@map("lavanderias")
}

// Modelo para a tabela de Máquinas de Lavar
model MaquinaDeLavar {
  id            Int           @id @default(autoincrement())
  nome          String        // Ex: "Máquina 01", "Máquina 02"
  status        StatusMaquina @default(disponivel)
  capacidade    String?       // Ex: "8kg", "12kg"
  valor_lavagem Float?        // Valor em R$ para usar a máquina
  observacoes   String?       // Observações sobre a máquina
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")

  // Relação: Uma máquina pertence a uma lavanderia
  lavanderia    Lavanderia @relation(fields: [lavanderia_id], references: [id], onDelete: Cascade)
  lavanderia_id Int

  // Mapeia o nome do modelo para a tabela no banco
  @@map("maquinas_de_lavar")
}

// Modelo para a tabela de Solicitações de Suporte
model TicketSuporte {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  message     String
  createdAt   DateTime @default(now())

  @@map("solicitacoes_suporte")
}